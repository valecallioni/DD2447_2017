a_new = sapply(fun, a[,1])
a[,1]
a_new = sapply(a[,1], fun)
a_new = sapply(a, fun)
as.list(a)
as.list(a[,:])
a = c(c(1,2,3),
c(3,1,2),
c(2,3,1))
setwd("C:/Users/Vale/Dropbox/Poli/Erasmus/KTH/Statitical Methods for Applied Computer Science/DD2447_2017/task5")
setwd("C:/Users/Vale/Dropbox/Poli/Erasmus/KTH/Statitical Methods for Applied Computer Science/DD2447_2017/task5")
source("task5_functions.R")
T = 500
N = 100
phi = 0.98
a = 0.01
b = 0.01
X = NULL        # will have dimension TXN
sigma2 = NULL   # will have dimension 1xN
beta2 = NULL    # will have dimension 1xN
y = read.table("output.txt")
source("task5_functions.R")
sigma0 = rigamma(1, a, b)
x = array(0,T+1)
x[1] =  rnorm(1, 0, sqrt(sigma0/(1-phi^2)))
x[2:(T+1)] = sapply(phi*x[1:T], normalSamplingX, sigma = sqrt(sigma0))
?rigamma
install.packages("invgamma")
library(invgamma)
sigma0 = rinvgamma(1, a, b)
source("task5_functions.R")
x = array(0,T+1)
x[1] =  rnorm(1, 0, sqrt(sigma0/(1-phi^2)))
x[2:(T+1)] = sapply(phi*x[1:T], normalSamplingX, sigma = sqrt(sigma0))
# Gibbs sampling
for (i in 1:N){
sigma = update_sigma2(x, phi)
sigma2 = c(sigma2, sigma)
x = update_x(sigma, phi)
X = rbind(X, x)
beta = update_beta2(x, y)
beta2 = c(beta2, beta)
}
source("task5_functions.R")
sigma0 = rinvgamma(1, a, b)
x = array(0,T+1)
x[1] =  rnorm(1, 0, sqrt(sigma0/(1-phi^2)))
x[2:(T+1)] = sapply(phi*x[1:T], normalSamplingX, sigma = sqrt(sigma0))
for (i in 1:N){
sigma = update_sigma2(x, phi)
sigma2 = c(sigma2, sigma)
x = update_x(sigma, phi)
X = rbind(X, x)
beta = update_beta2(x, y)
beta2 = c(beta2, beta)
}
T = 500
N = 100
phi = 0.98
a = 0.01
b = 0.01
X = NULL        # will have dimension TXN
sigma2 = NULL   # will have dimension 1xN
beta2 = NULL    # will have dimension 1xN
y = read.table("output.txt")
# Initialization of sigma2 and X
sigma0 = rinvgamma(1, a, b)
x = array(0,T+1)
x[1] =  rnorm(1, 0, sqrt(sigma0/(1-phi^2)))
x[2:(T+1)] = sapply(phi*x[1:T], normalSamplingX, sigma = sqrt(sigma0))
# for (t in 2:(T+1)){
#   x[t] = rnorm(1, phi*x[t-1], sqrt(sigma0))
# }
# Gibbs sampling
for (i in 1:N){
sigma = update_sigma2(x, phi)
sigma2 = c(sigma2, sigma)
x = update_x(sigma, phi)
X = rbind(X, x)
beta = update_beta2(x, y[,1])
beta2 = c(beta2, beta)
}
x11()
plot(1:N, sigma2, main="Sigma2 estimates")
T = 500
N = 1000
phi = 0.98
a = 0.01
b = 0.01
X = NULL        # will have dimension TXN
sigma2 = NULL   # will have dimension 1xN
beta2 = NULL    # will have dimension 1xN
y = read.table("output.txt")
# Initialization of sigma2 and X
sigma0 = rinvgamma(1, a, b)
x = array(0,T+1)
x[1] =  rnorm(1, 0, sqrt(sigma0/(1-phi^2)))
x[2:(T+1)] = sapply(phi*x[1:T], normalSamplingX, sigma = sqrt(sigma0))
# for (t in 2:(T+1)){
#   x[t] = rnorm(1, phi*x[t-1], sqrt(sigma0))
# }
# Gibbs sampling
for (i in 1:N){
sigma = update_sigma2(x, phi)
sigma2 = c(sigma2, sigma)
x = update_x(sigma, phi)
X = rbind(X, x)
beta = update_beta2(x, y[,1])
beta2 = c(beta2, beta)
}
plot(1:N, sigma2, main="Sigma2 estimates")
source("task5_functions.R")
T = 500
N = 1000
phi = 0.98
a = 0.01
b = 0.01
X = NULL        # will have dimension TXN
sigma2 = NULL   # will have dimension 1xN
beta2 = NULL    # will have dimension 1xN
y = read.table("output.txt")
# Initialization of sigma2 and X
sigma0 = rinvgamma(1, a, b)
x = array(0,T+1)
x[1] =  rnorm(1, 0, sqrt(sigma0/(1-phi^2)))
x[2:(T+1)] = sapply(phi*x[1:T], normalSamplingX, sigma = sqrt(sigma0))
# for (t in 2:(T+1)){
#   x[t] = rnorm(1, phi*x[t-1], sqrt(sigma0))
# }
# Gibbs sampling
for (i in 1:N){
sigma = update_sigma2(x, phi)
sigma2 = c(sigma2, sigma)
x = update_x(sigma, phi)
X = rbind(X, x)
beta = update_beta2(x, y[,1])
beta2 = c(beta2, beta)
}
plot(1:N, beta2, main="Beta2 estimates")
T = 500
N = 1000
phi = 0.98
a = 0.01
b = 0.01
X = NULL        # will have dimension TXN
sigma2 = NULL   # will have dimension 1xN
beta2 = NULL    # will have dimension 1xN
y = read.table("output.txt")
# Initialization of sigma2 and X
sigma0 = rinvgamma(1, a, b)
x = array(0,T+1)
x[1] =  rnorm(1, 0, sqrt(sigma0/(1-phi^2)))
?rnorm
sqrt(sigma0/(1-phi^2))
x
x[1] =  rnorm(1, 0, sqrt(sigma0/(1-phi^2)))
for (t in 2:(T+1))
x[t] = rnorm(1, phi*x[t-1], sqrt(sigma0))
x
# Gibbs sampling
for (i in 1:N){
sigma = update_sigma2(x, phi)
sigma2 = c(sigma2, sigma)
x = update_x(sigma, phi)
X = rbind(X, x)
beta = update_beta2(x, y[,1])
beta2 = c(beta2, beta)
}
source("task5_functions.R")
T = 500
N = 1000
phi = 0.98
a = 0.01
b = 0.01
X = NULL        # will have dimension TXN
sigma2 = NULL   # will have dimension 1xN
beta2 = NULL    # will have dimension 1xN
y = read.table("output.txt")
# Initialization of sigma2 and X
sigma0 = rinvgamma(1, a, b)
x = array(0,T+1)
x[1] =  rnorm(1, 0, sqrt(sigma0/(1-phi^2)))
for (t in 2:(T+1))
x[t] = rnorm(1, phi*x[t-1], sqrt(sigma0))
# Gibbs sampling
for (i in 1:N){
sigma = update_sigma2(x, phi)
sigma2 = c(sigma2, sigma)
x = update_x(sigma, phi)
X = rbind(X, x)
beta = update_beta2(x, y[,1])
beta2 = c(beta2, beta)
}
plot(1:N, sigma2, main="Sigma2 estimates")
plot(1:N, beta2, main="Beta2 estimates")
length(x)
x[501]
x[1]
x = x[-1]
length(x)
x = x[1]
a = c(1,2,3)
a = a[-1]
a
source("task5_functions.R")
#-------------------------------------------------------------------
T = 500
N = 1000
phi = 0.98
a = 0.01
b = 0.01
X = NULL        # will have dimension TXN
sigma2 = NULL   # will have dimension 1xN
beta2 = NULL    # will have dimension 1xN
y = read.table("output.txt")
# Initialization of sigma2 and X
sigma0 = rinvgamma(1, a, b)
x = array(0,T+1)
x[1] =  rnorm(1, 0, sqrt(sigma0/(1-phi^2)))
for (t in 2:(T+1))
x[t] = rnorm(1, phi*x[t-1], sqrt(sigma0))
# Gibbs sampling
for (i in 1:N){
sigma = update_sigma2(x, phi)
sigma2 = c(sigma2, sigma)
x = update_x(sigma, phi)
X = rbind(X, x)
beta = update_beta2(x, y[,1])
beta2 = c(beta2, beta)
}
plot(1:N, sigma2, main="Sigma2 estimates")
plot(1:N, beta2, main="Beta2 estimates")
T = 500
N = 1000
phi = 0.98
a = 0.01
b = 0.01
X = NULL        # will have dimension TXN
sigma2 = NULL   # will have dimension 1xN
beta2 = NULL    # will have dimension 1xN
y = read.table("output.txt")
# Initialization of sigma2 and X
sigma0 = rinvgamma(1, a, b)
x = array(0,T+1)
x[1] =  rnorm(1, 0, sqrt(sigma0/(1-phi^2)))
for (t in 2:(T+1))
x[t] = rnorm(1, phi*x[t-1], sqrt(sigma0))
for (i in 1:N){
sigma = update_sigma2(x, phi, T)
sigma2 = c(sigma2, sigma)
x = update_x(sigma, phi, T)
X = rbind(X, x)
beta = update_beta2(x, y[,1], T)
beta2 = c(beta2, beta)
}
source("task5_functions.R")
T = 500
N = 1000
phi = 0.98
a = 0.01
b = 0.01
X = NULL        # will have dimension TXN
sigma2 = NULL   # will have dimension 1xN
beta2 = NULL    # will have dimension 1xN
y = read.table("output.txt")
# Initialization of sigma2 and X
sigma0 = rinvgamma(1, a, b)
x = array(0,T+1)
x[1] =  rnorm(1, 0, sqrt(sigma0/(1-phi^2)))
for (t in 2:(T+1))
x[t] = rnorm(1, phi*x[t-1], sqrt(sigma0))
# Gibbs sampling
for (i in 1:N){
sigma = update_sigma2(x, phi, T)
sigma2 = c(sigma2, sigma)
x = update_x(sigma, phi, T)
X = rbind(X, x)
beta = update_beta2(x, y[,1], T)
beta2 = c(beta2, beta)
}
x11()
plot(1:N, sigma2, main="Sigma2 estimates")
x11()
plot(1:N, beta2, main="Beta2 estimates")
source("task5_functions.R")
T = 500
N = 10000
phi = 0.98
a = 0.01
b = 0.01
X = NULL        # will have dimension TXN
sigma2 = NULL   # will have dimension 1xN
beta2 = NULL    # will have dimension 1xN
y = read.table("output.txt")
# Initialization of sigma2 and X
sigma0 = rinvgamma(1, a, b)
x = array(0,T+1)
x[1] =  rnorm(1, 0, sqrt(sigma0/(1-phi^2)))
for (t in 2:(T+1))
x[t] = rnorm(1, phi*x[t-1], sqrt(sigma0))
# Gibbs sampling
for (i in 1:N){
sigma = update_sigma2(x, phi, T)
sigma2 = c(sigma2, sigma)
x = update_x(sigma, phi, T)
X = rbind(X, x)
beta = update_beta2(x, y[,1], T)
beta2 = c(beta2, beta)
}
x11()
plot(1:N, sigma2, main="Sigma2 estimates")
x11()
plot(1:N, beta2, main="Beta2 estimates")
beta
beta2
v = c(2,4,6)
w = c(1,1,1)
sum((v-w)^2)
sum((v[1:2]-w[2:3])^2)
source("task5_functions.R")
source("task5_functions.R")
T = 500
N = 1000
phi = 0.98
a = 0.01
b = 0.01
X = NULL        # will have dimension TXN
sigma2 = NULL   # will have dimension 1xN
beta2 = NULL    # will have dimension 1xN
y = read.table("output.txt")
# Initialization of sigma2 and X
sigma0 = rinvgamma(1, a, b)
x = array(0,T+1)
x[1] =  rnorm(1, 0, sqrt(sigma0/(1-phi^2)))
for (t in 2:(T+1))
x[t] = rnorm(1, phi*x[t-1], sqrt(sigma0))
# Gibbs sampling
for (i in 1:N){
sigma = update_sigma2(x, phi, T)
sigma2 = c(sigma2, sigma)
x = update_x(sigma, phi, T)
X = rbind(X, x)
beta = update_beta2(x, y[,1], T)
beta2 = c(beta2, beta)
}
plot(1:N, sigma2, main="Sigma2 estimates")
plot(1:N, beta2, main="Beta2 estimates")
T = 500
N = 1000
phi = 0.98
a = 0.01
b = 0.01
X = NULL        # will have dimension TXN
sigma2 = NULL   # will have dimension 1xN
beta2 = NULL    # will have dimension 1xN
y = read.table("output.txt")
# Initialization of sigma2 and X
sigma0 = rinvgamma(1, a, b)
x = array(0,T+1)
x[1] =  rnorm(1, 0, sqrt(sigma0/(1-phi^2)))
for (t in 2:(T+1))
x[t] = rnorm(1, phi*x[t-1], sqrt(sigma0))
i = 1
sigma = update_sigma2(x, phi, T)
sigma2 = c(sigma2, sigma)
x = update_x(sigma, phi, T)
X = rbind(X, x)
beta = update_beta2(x, y[,1], T)
source("task5_functions.R")
T = 500
N = 1000
phi = 0.98
a = 0.01
b = 0.01
X = NULL        # will have dimension TXN
sigma2 = NULL   # will have dimension 1xN
beta2 = NULL    # will have dimension 1xN
sigma0 = rinvgamma(1, a, b)
x = array(0,T+1)
x[1] =  rnorm(1, 0, sqrt(sigma0/(1-phi^2)))
for (t in 2:(T+1))
x[t] = rnorm(1, phi*x[t-1], sqrt(sigma0))
sigma = update_sigma2(x, phi, T)
sigma2 = c(sigma2, sigma)
x = update_x(sigma, phi, T)
X = rbind(X, x)
beta = update_beta2(x, y[,1], T)
?rinvgamma
install.packages("pscl")
library(pscl)
sigma0 = rinvgamma(1, a, b)
sigma0 = rigamma(1, a, b)
source("task5_functions.R")
#-------------------------------------------------------------------
T = 500
N = 1000
phi = 0.98
a = 0.01
b = 0.01
X = NULL        # will have dimension TXN
sigma2 = NULL   # will have dimension 1xN
beta2 = NULL    # will have dimension 1xN
y = read.table("output.txt")
# Initialization of sigma2 and X
sigma0 = rigamma(1, a, b)
x = array(0,T+1)
x[1] =  rnorm(1, 0, sqrt(sigma0/(1-phi^2)))
for (t in 2:(T+1))
x[t] = rnorm(1, phi*x[t-1], sqrt(sigma0))
sigma = update_sigma2(x, phi, T)
sigma2 = c(sigma2, sigma)
x = update_x(sigma, phi, T)
X = rbind(X, x)
beta = update_beta2(x, y[,1], T)
beta2 = c(beta2, beta)
X = NULL        # will have dimension TXN
sigma2 = NULL   # will have dimension 1xN
beta2 = NULL    # will have dimension 1xN
y = read.table("output.txt")
# Initialization of sigma2 and X
sigma0 = rigamma(1, a, b)
x = array(0,T+1)
x[1] =  rnorm(1, 0, sqrt(sigma0/(1-phi^2)))
for (t in 2:(T+1))
x[t] = rnorm(1, phi*x[t-1], sqrt(sigma0))
# Gibbs sampling
for (i in 1:N){
sigma = update_sigma2(x, phi, T)
sigma2 = c(sigma2, sigma)
x = update_x(sigma, phi, T)
X = rbind(X, x)
beta = update_beta2(x, y[,1], T)
beta2 = c(beta2, beta)
}
plot(1:N, sigma2, main="Sigma2 estimates")
plot(1:N, beta2, main="Beta2 estimates")
T = 500
N = 1000
phi = 0.98
a = 0.01
b = 0.01
X = NULL        # will have dimension TXN
sigma2 = NULL   # will have dimension 1xN
beta2 = NULL    # will have dimension 1xN
y = read.table("output.txt")
# Initialization of sigma2 and X
sigma0 = rigamma(1, a, b)
x = array(0,T+1)
x[1] =  rnorm(1, 0, sqrt(sigma0/(1-phi^2)))
for (t in 2:(T+1))
x[t] = rnorm(1, phi*x[t-1], sqrt(sigma0))
i = 0
sigma = update_sigma2(x, phi, T)
sigma2 = c(sigma2, sigma)
x = update_x(sigma, phi, T)
X = rbind(X, x)
beta = update_beta2(x, y[,1], T)
T = 500
N = 1000
phi = 0.98
a = 0.01
b = 0.01
X = NULL        # will have dimension TXN
sigma2 = NULL   # will have dimension 1xN
beta2 = NULL    # will have dimension 1xN
y = read.table("output.txt")
# Initialization of sigma2 and X
sigma0 = rigamma(1, a, b)
sigma0 = rigamma(1, a, b)
sigma0 = rigamma(1, a, b)
sigma0 = rigamma(1, a, b)
?rigamma
a = 0.01
b = 0.01
xseq = exp(seq(-7, 30, length=1001))
fx = densigamma(xseq,a,b)
plot(xseq,fx)
a = 0.1
b = 0.1
fx = densigamma(xseq,a,b)
plot(xseq,fx)
plot(xseq,fx, log="xy")
T = 500
N = 1000
phi = 0.98
a = 0.01
b = 0.01
X = NULL        # will have dimension TXN
sigma2 = NULL   # will have dimension 1xN
beta2 = NULL    # will have dimension 1xN
sigma0 = rigamma(1, a, b)
x = array(0,T+1)
x[1] =  rnorm(1, 0, sqrt(sigma0/(1-phi^2)))
for (t in 2:(T+1))
x[t] = rnorm(1, phi*x[t-1], sqrt(sigma0))
sigma0 = rigamma(1, a, b)
sigma0 = rigamma(1, a, b)
sigma0 = rigamma(1, a, b)
setwd("C:/Users/Vale/Dropbox/Poli/Erasmus/KTH/Statitical Methods for Applied Computer Science/DD2447_2017/task1")
source("task1_functions.R")
rm(list=ls())
setwd("C:/Users/Vale/Dropbox/Poli/Erasmus/KTH/Statitical Methods for Applied Computer Science/DD2447_2017/task1")
source("task1_functions.R")
source("task1_functions.R")
y = read.table("output.txt")
beta = seq(0, 2, length.out = 20)
likelihood = NULL
for (k in 1:10){
l = NULL
l = sapply(beta, estimateLikelihoodResampl, y=y)
likelihood = rbind(likelihood, l)
}
